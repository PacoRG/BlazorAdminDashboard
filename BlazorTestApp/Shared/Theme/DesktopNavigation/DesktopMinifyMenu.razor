@inject IThemeMessageService<ThemeConfigData> ThemeMessageService
@inject IJSRuntime JSRuntime

<div class="desktop-minify-menu">
    <div class="minifyme d-flex align-items-center" @onclick="@Toggle">
        <div class="img-container justify-content-center">
            <span class="coms-expand-arrow coms-expand-arrow1"></span>
        </div>
    </div>
</div>

@code {

    private bool IsMinified { get; set; }
    private LocalStorageData LocalStorageData { get; set; } = new LocalStorageData();

    private void Toggle()
    {
        IsMinified = !IsMinified;

        var themeConfigData = new ThemeConfigData();

        themeConfigData.IsMinified = IsMinified;

        var actionMessage = new ActionMessage<ThemeConfigData>
        {
            Emitter = ThemeMessageEmitter.DesktopMinifyMenu,
            Data = themeConfigData
        };

        ThemeMessageService.SendMessage(actionMessage);
    }

    protected override async Task OnInitAsync()
    {

        LocalStorageData.Rights = new Rights();
        LocalStorageData.CurrentUser = new CurrentUser();

        var localStorageData = await LocalStorage.GetAsync<LocalStorageData>(JSRuntime, "BlazorTestApp");



        if (localStorageData != null)
        {

            LocalStorageData = localStorageData;
            IsMinified = LocalStorageData.IsMinified;
        }
    }

}
