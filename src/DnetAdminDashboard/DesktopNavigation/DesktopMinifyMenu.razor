@using DnetAdminDashboard.DesktopLayout
@using DnetAdminDashboard.Infrastructure.Enums
@using DnetAdminDashboard.Infrastructure.HelperClasses
@using DnetAdminDashboard.Infrastructure.Interfaces
@using DnetAdminDashboard.Infrastructure.Models
@using DnetAdminDashboard.Infrastructure.Services
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop

@inject IThemeMessageService<ThemeConfigData> ThemeMessageService
@inject IJSRuntime JSRuntime

<div class="desktop-minify-menu" @onclick="Toggle">
    <div class="minifyme" style="@GetStyle()">
        <div class="img-container justify-content-center">
            <span class="dnet-expand-arrow dnet-expand-arrow1"></span>
        </div>
    </div>
</div>

@code {

    [CascadingParameter]
    private DesktopLayout _desktopLayout { get; set; }

    public bool IsMinified { get; set; }

    public LocalStorageData LocalStorageData { get; set; } = new LocalStorageData();

    private string GetStyle()
    {
        return _desktopLayout.ShowMinifier ? "display: flex;" : "display: none;";
    }

    public void Toggle()
    {
        IsMinified = !IsMinified;

        var themeConfigData = new ThemeConfigData { IsMinified = IsMinified };

        var actionMessage = new ActionMessage<ThemeConfigData>
        {
            Emitter = ThemeMessageEmitter.DesktopMinifyMenu,
            Data = themeConfigData
        };

        ThemeMessageService.SendMessage(actionMessage);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var localStorageData = await DnetAdminDashboardInterop.GetAsync<LocalStorageData>(JSRuntime, "BlazorTestApp");

        if (localStorageData != null)
        {

            LocalStorageData = localStorageData;
            IsMinified = LocalStorageData.IsMinified;
        }
    }

}